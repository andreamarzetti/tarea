{"ast":null,"code":"var _jsxFileName = \"C:\\\\Tarea\\\\src\\\\screens\\\\MonthlyStatsScreen.js\",\n  _this = this;\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useQuery } from '@tanstack/react-query';\nimport { fetchMonthlyStats } from \"../utils/api\";\nimport useStore from \"../store/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar MonthlyStatsScreen = function MonthlyStatsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useQuery = useQuery(['monthlyStats'], fetchMonthlyStats),\n    data = _useQuery.data,\n    isLoading = _useQuery.isLoading,\n    isError = _useQuery.isError;\n  var setSelectedMonth = useStore(function (state) {\n    return state.setSelectedMonth;\n  });\n  var handleMonthPress = function handleMonthPress(month) {\n    setSelectedMonth(month);\n    navigation.navigate('Activities', {\n      month: month\n    });\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxDEV(TouchableOpacity, {\n      style: styles.card,\n      onPress: function onPress() {\n        return handleMonthPress(item.month);\n      },\n      children: [_jsxDEV(Text, {\n        style: styles.monthText,\n        children: item.month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, _this), _jsxDEV(Text, {\n        style: styles.statText,\n        children: [\"Total Distance: \", item.totalDistance, \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, _this), _jsxDEV(Text, {\n        style: styles.statText,\n        children: [\"Total Time: \", item.totalTime, \" hrs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, _this), _jsxDEV(Text, {\n        style: styles.statText,\n        children: [\"Total Elevation: \", item.totalElevationGain, \" m\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, _this);\n  };\n  if (isLoading) {\n    return _jsxDEV(View, {\n      style: styles.centered,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#007AFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this), _jsxDEV(Text, {\n        children: \"Loading Monthly Stats...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this);\n  }\n  if (isError) {\n    return _jsxDEV(View, {\n      style: styles.centered,\n      children: _jsxDEV(Text, {\n        style: styles.errorText,\n        children: \"Failed to load monthly stats. Please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.header,\n      children: \"Monthly Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this), _jsxDEV(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(item) {\n        return item.month;\n      },\n      renderItem: renderItem,\n      contentContainerStyle: styles.listContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5',\n    padding: 16\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  card: {\n    backgroundColor: '#FFFFFF',\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 12,\n    elevation: 3\n  },\n  monthText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  statText: {\n    fontSize: 14,\n    color: '#555555'\n  },\n  listContainer: {\n    paddingBottom: 16\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 16,\n    textAlign: 'center'\n  }\n});\nexport default MonthlyStatsScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","FlatList","TouchableOpacity","ActivityIndicator","useQuery","fetchMonthlyStats","useStore","jsxDEV","_jsxDEV","MonthlyStatsScreen","_ref","navigation","_useQuery","data","isLoading","isError","setSelectedMonth","state","handleMonthPress","month","navigate","renderItem","_ref2","item","style","styles","card","onPress","children","monthText","fileName","_jsxFileName","lineNumber","columnNumber","_this","statText","totalDistance","totalTime","totalElevationGain","centered","size","color","errorText","container","header","keyExtractor","contentContainerStyle","listContainer","create","flex","backgroundColor","padding","fontSize","fontWeight","marginBottom","textAlign","borderRadius","elevation","paddingBottom","justifyContent","alignItems"],"sources":["C:/Tarea/src/screens/MonthlyStatsScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity, ActivityIndicator } from 'react-native';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { fetchMonthlyStats } from '../utils/api';\r\nimport useStore from '../store/store';\r\n\r\nconst MonthlyStatsScreen = ({ navigation }) => {\r\n  // Fetch monthly stats data using React Query\r\n  const { data, isLoading, isError } = useQuery(['monthlyStats'], fetchMonthlyStats);\r\n\r\n  // Zustand global state to store selected month\r\n  const setSelectedMonth = useStore((state) => state.setSelectedMonth);\r\n\r\n  // Handle navigation to monthly activities\r\n  const handleMonthPress = (month) => {\r\n    setSelectedMonth(month);\r\n    navigation.navigate('Activities', { month });\r\n  };\r\n\r\n  // Render each month's stats\r\n  const renderItem = ({ item }) => (\r\n    <TouchableOpacity style={styles.card} onPress={() => handleMonthPress(item.month)}>\r\n      <Text style={styles.monthText}>{item.month}</Text>\r\n      <Text style={styles.statText}>Total Distance: {item.totalDistance} km</Text>\r\n      <Text style={styles.statText}>Total Time: {item.totalTime} hrs</Text>\r\n      <Text style={styles.statText}>Total Elevation: {item.totalElevationGain} m</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  // Loading and error states\r\n  if (isLoading) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\r\n        <Text>Loading Monthly Stats...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (isError) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <Text style={styles.errorText}>Failed to load monthly stats. Please try again.</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Monthly Stats</Text>\r\n      <FlatList\r\n        data={data}\r\n        keyExtractor={(item) => item.month}\r\n        renderItem={renderItem}\r\n        contentContainerStyle={styles.listContainer}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n    padding: 16,\r\n  },\r\n  header: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n    textAlign: 'center',\r\n  },\r\n  card: {\r\n    backgroundColor: '#FFFFFF',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    marginBottom: 12,\r\n    elevation: 3,\r\n  },\r\n  monthText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n  statText: {\r\n    fontSize: 14,\r\n    color: '#555555',\r\n  },\r\n  listContainer: {\r\n    paddingBottom: 16,\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default MonthlyStatsScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}